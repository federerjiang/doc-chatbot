version: '3.8'
services:
  backend:
    build: ./backend
    ports:
      - "80:80"
    volumes:
      - ./backend/app:/code/app
    depends_on:
      # - ollama
      - qdrant
      - es01
      - pdf-parser
      - rerank
    networks:
      - ollama-docker
    restart: always

  pdf-parser:
    build: ./pdf-parser
    ports:
      - "8000:8000"
    volumes:
      - ./pdf-parser/app:/code/app
    networks:
      - ollama-docker
    restart: always

  rerank:
    build: ./rerank
    ports:
      - "8001:8001"
    volumes:
      - ./rerank/app:/code/app
    networks:
      - ollama-docker
    restart: always

  frontend:
    build: ./frontend
    ports:
      - "3010:3010"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    depends_on:
      - backend
      # - ollama
    networks:
      - ollama-docker

  # ollama:
  #   image: ollama/ollama:latest
  #   ports:
  #     - 11434:11434
  #   volumes:
  #     - .:/code
  #     - ./ollama/ollama:/root/.ollama
  #     - ./start-ollama.sh:/start-ollama.sh
  #   container_name: ollama
  #   restart: always
  #   networks:
  #     - ollama-docker
  #   healthcheck:
  #     test: [ "CMD", "pgrep", "-f", "ollama" ]
  #     interval: 30s
  #     retries: 10
  #     start_period: 120s
  #     timeout: 10s
  #   entrypoint: /bin/sh
  #   command: /start-ollama.sh

  # ollama-embedding:
  #   image: ollama/ollama:latest
  #   ports:
  #     - 11435:11435
  #   volumes:
  #     - .:/code
  #     - ./ollama/ollama:/root/.ollama
  #     - ./start-ollama-embedding.sh:/start-ollama-embedding.sh
  #   container_name: ollama-embedding
  #   restart: always
  #   networks:
  #     - ollama-docker
  #   healthcheck:
  #     test: [ "CMD", "pgrep", "-f", "ollama" ]
  #     interval: 30s
  #     retries: 10
  #     start_period: 120s
  #     timeout: 10s
  #   entrypoint: /bin/sh
  #   command: /start-ollama-embedding.sh

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - 6333:6333
    volumes:
      - ./qdrant/qdrant:/root/.qdrant
    container_name: qdrant
    restart: always
    networks:
      - ollama-docker
    healthcheck:
      test: [ "CMD", "pgrep", "-f", "qdrant" ]
      interval: 30s
      retries: 10
      start_period: 120s
      timeout: 10s

  es01:
    container_name: es01
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    volumes:
      - ./es/es:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    environment:
      - node.name=es01
      - bootstrap.memory_lock=false
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - cluster.routing.allocation.disk.threshold_enabled=false
      - cluster.routing.allocation.disk.watermark.low=95%
      - cluster.routing.allocation.disk.watermark.high=97%
      - cluster.routing.allocation.disk.watermark.flood_stage=98%
      - cluster.info.update.interval=1m
      - indices.recovery.max_bytes_per_sec=50mb
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:9200"]
      interval: 10s
      timeout: 20s
      retries: 120
    networks:
      - ollama-docker
    restart: always


networks:
  ollama-docker:
    driver: bridge
    external: false